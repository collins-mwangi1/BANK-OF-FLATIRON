{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/collins/Downloads/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortCriteria, setSortCriteria] = useState(null); // Fetch transactions from the backend API\n  // ... useEffect, addTransaction, deleteTransaction, and handleSearch remain the same\n  // Function to sort transactions\n\n  const sortTransactions = criteria => {\n    const sorted = [...filteredTransactions].sort((a, b) => {\n      if (a[criteria] < b[criteria]) return -1;\n      if (a[criteria] > b[criteria]) return 1;\n      return 0;\n    });\n    setFilteredTransactions(sorted);\n    setSortCriteria(criteria);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search transactions\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortTransactions(\"category\"),\n        children: \"Sort by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortTransactions(\"description\"),\n        children: \"Sort by Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"WQ/58O4hEeQKpEP6/cEqxSPKb1I=\");\n\n_c = TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/collins/Downloads/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/TransactionsList.js"],"names":["TransactionsList","transactions","setTransactions","useState","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","sortCriteria","setSortCriteria","sortTransactions","criteria","sorted","sort","a","b","handleSearch"],"mappings":";;;;;AAAA,SAASA,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDF,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD,CAJ0B,CAM1B;AAEA;AAEA;;AACA,QAAMO,gBAAgB,GAAIC,QAAD,IAAc;AACrC,UAAMC,MAAM,GAAG,CAAC,GAAGR,oBAAJ,EAA0BS,IAA1B,CAA+B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtD,UAAID,CAAC,CAACH,QAAD,CAAD,GAAcI,CAAC,CAACJ,QAAD,CAAnB,EAA+B,OAAO,CAAC,CAAR;AAC/B,UAAIG,CAAC,CAACH,QAAD,CAAD,GAAcI,CAAC,CAACJ,QAAD,CAAnB,EAA+B,OAAO,CAAP;AAC/B,aAAO,CAAP;AACD,KAJc,CAAf;AAKAN,IAAAA,uBAAuB,CAACO,MAAD,CAAvB;AACAH,IAAAA,eAAe,CAACE,QAAD,CAAf;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,qBAFd;AAGE,MAAA,KAAK,EAAEL,UAHT;AAIE,MAAA,QAAQ,EAAEU;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMN,gBAAgB,CAAC,UAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,aAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxCQV,gB;;KAAAA,gB","sourcesContent":["function TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortCriteria, setSortCriteria] = useState(null);\n\n  // Fetch transactions from the backend API\n\n  // ... useEffect, addTransaction, deleteTransaction, and handleSearch remain the same\n\n  // Function to sort transactions\n  const sortTransactions = (criteria) => {\n    const sorted = [...filteredTransactions].sort((a, b) => {\n      if (a[criteria] < b[criteria]) return -1;\n      if (a[criteria] > b[criteria]) return 1;\n      return 0;\n    });\n    setFilteredTransactions(sorted);\n    setSortCriteria(criteria);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search transactions\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <div>\n        <button onClick={() => sortTransactions(\"category\")}>\n          Sort by Category\n        </button>\n        <button onClick={() => sortTransactions(\"description\")}>\n          Sort by Description\n        </button>\n      </div>\n      {/* Table rendering and Transaction components remain the same */}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}