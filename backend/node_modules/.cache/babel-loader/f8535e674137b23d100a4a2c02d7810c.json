{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/collins/Downloads/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\nimport axios from \"axios\"; // Assuming axios is used for HTTP requests\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Fetch transactions from the backend API\n\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const response = await axios.get(\"/transactions\");\n        setTransactions(response.data);\n        setFilteredTransactions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    }\n\n    fetchTransactions();\n  }, []); // Function to add a new transaction\n\n  const addTransaction = async newTransaction => {\n    try {\n      const response = await axios.post(\"/transactions\", newTransaction);\n      setTransactions([...transactions, response.data]);\n      setFilteredTransactions([...filteredTransactions, response.data]);\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  }; // Function to delete a transaction\n\n\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`/transactions/${id}`);\n      const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n      setTransactions(updatedTransactions);\n      setFilteredTransactions(updatedTransactions);\n    } catch (error) {\n      console.error(\"Error deleting transaction:\", error);\n    }\n  }; // Function to handle search/filter\n\n\n  const handleSearch = event => {\n    const searchTerm = event.target.value.toLowerCase();\n    setSearchTerm(searchTerm);\n    const filtered = transactions.filter(transaction => transaction.description.toLowerCase().includes(searchTerm));\n    setFilteredTransactions(filtered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search transactions\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          transaction: transaction,\n          deleteTransaction: deleteTransaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"lAzgXk76csJ82Bh5mhlYCuJx0Aw=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/collins/Downloads/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/TransactionsList.js"],"names":["React","useState","useEffect","Transaction","axios","TransactionsList","transactions","setTransactions","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","fetchTransactions","response","get","data","error","console","addTransaction","newTransaction","post","deleteTransaction","id","delete","updatedTransactions","filter","transaction","handleSearch","event","target","value","toLowerCase","filtered","description","includes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\nimport axios from \"axios\"; // Assuming axios is used for HTTP requests\n\nfunction TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  // Fetch transactions from the backend API\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const response = await axios.get(\"/transactions\");\n        setTransactions(response.data);\n        setFilteredTransactions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    }\n    fetchTransactions();\n  }, []);\n\n  // Function to add a new transaction\n  const addTransaction = async (newTransaction) => {\n    try {\n      const response = await axios.post(\"/transactions\", newTransaction);\n      setTransactions([...transactions, response.data]);\n      setFilteredTransactions([...filteredTransactions, response.data]);\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  };\n\n  // Function to delete a transaction\n  const deleteTransaction = async (id) => {\n    try {\n      await axios.delete(`/transactions/${id}`);\n      const updatedTransactions = transactions.filter(\n        (transaction) => transaction.id !== id\n      );\n      setTransactions(updatedTransactions);\n      setFilteredTransactions(updatedTransactions);\n    } catch (error) {\n      console.error(\"Error deleting transaction:\", error);\n    }\n  };\n\n  // Function to handle search/filter\n  const handleSearch = (event) => {\n    const searchTerm = event.target.value.toLowerCase();\n    setSearchTerm(searchTerm);\n    const filtered = transactions.filter((transaction) =>\n      transaction.description.toLowerCase().includes(searchTerm)\n    );\n    setFilteredTransactions(filtered);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search transactions\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Actions</h3>\n            </th>\n          </tr>\n          {filteredTransactions.map((transaction) => (\n            <Transaction\n              key={transaction.id}\n              transaction={transaction}\n              deleteTransaction={deleteTransaction}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}